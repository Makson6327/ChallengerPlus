[manifest]
version = "1.0.0"
dump_lua = true
priority = 1

    # Making Selzer each ante
[[patches]]
[patches.pattern]
target = "back.lua"
pattern = '''
if self.name == 'Anaglyph Deck' and args.context == 'eval' and G.GAME.last_blind and G.GAME.last_blind.boss then
    G.E_MANAGER:add_event(Event({
        func = (function()
            add_tag(Tag('tag_double'))
            play_sound('generic1', 0.9 + math.random()*0.1, 0.8)
            play_sound('holo1', 1.2 + math.random()*0.1, 0.4)
            return true
        end)
    }))
end
'''
position = "after"
payload = '''
if G.GAME.modifiers.chlen_selzer_maker and args.context == 'eval' and G.GAME.last_blind and G.GAME.last_blind.boss then
    G.E_MANAGER:add_event(Event({
	    func = function()
			SMODS.add_card { key = 'j_selzer', edition = "e_negative" }
            SMODS.add_card { key = 'j_selzer', edition = "e_negative" }
            SMODS.add_card { key = 'j_selzer', edition = "e_negative" }
            SMODS.add_card { key = 'j_selzer', edition = "e_negative" }
            SMODS.add_card { key = 'j_selzer', edition = "e_negative" }
			return true
		end
	}))
end
'''
match_indent = true
times = 1

    # Ante for Selzers
[[patches]]
[patches.pattern]
target = "blind.lua"
pattern = '''
self.chips = get_blind_amount(G.GAME.round_resets.ante)*self.mult*G.GAME.starting_params.ante_scaling
'''
position = "after"
payload = '''
if G.GAME.modifiers.chlen_storm_ante then
    self.chips = self.chips*G.GAME.round_resets.ante*G.GAME.round_resets.ante
end
'''
match_indent = true
times = 1

[[patches]]
[patches.pattern]
target = 'functions/UI_definitions.lua'
pattern = '''
local blind_amt = get_blind_amount(G.GAME.round_resets.blind_ante)*blind_choice.config.mult*G.GAME.starting_params.ante_scaling
'''
position = "after"
payload = '''
if G.GAME.modifiers.chlen_storm_ante then
    blind_amt = blind_amt*G.GAME.round_resets.ante*G.GAME.round_resets.ante
end
'''
match_indent = true
times = 1