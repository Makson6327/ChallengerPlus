[manifest]
version = "1.0.0"
dump_lua = true
priority = 1

    # Subtracting discards n hands at the end of round
[[patches]]
[patches.pattern]
target = "blind.lua"
pattern = '''
elseif self.name == 'Amber Acorn' and not reset and #G.jokers.cards > 0 then
    G.jokers:unhighlight_all()
    for k, v in ipairs(G.jokers.cards) do
        v:flip()
    end
    if #G.jokers.cards > 1 then 
        G.E_MANAGER:add_event(Event({ trigger = 'after', delay = 0.2, func = function() 
            G.E_MANAGER:add_event(Event({ func = function() G.jokers:shuffle('aajk'); play_sound('cardSlide1', 0.85);return true end })) 
            delay(0.15)
            G.E_MANAGER:add_event(Event({ func = function() G.jokers:shuffle('aajk'); play_sound('cardSlide1', 1.15);return true end })) 
            delay(0.15)
            G.E_MANAGER:add_event(Event({ func = function() G.jokers:shuffle('aajk'); play_sound('cardSlide1', 1);return true end })) 
            delay(0.5)
        return true end })) 
    end
end
'''
position = "after"
payload = '''
if G.GAME.modifiers.chlen_hands_n_discards and not reset and G.GAME.round > 1 then
    self.hands_sub = G.GAME.hands_played
    ease_hands_played(-self.hands_sub)

    self.discards_sub = G.GAME.current_round.discards_left - G.GAME.unused_discards
    ease_discard(-self.discards_sub)
end
'''
match_indent = true
times = 1


[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = '''
G.GAME.unused_discards = (G.GAME.unused_discards or 0) + G.GAME.current_round.discards_left
'''
position = "at"
payload = '''
if G.GAME.modifiers.chlen_hands_n_discards then
    G.GAME.unused_discards = G.GAME.current_round.discards_left
else
    G.GAME.unused_discards = (G.GAME.unused_discards or 0) + G.GAME.current_round.discards_left
end
'''
match_indent = true
times = 1